**Running the code**
-Please run python testing_for_visuals.py to see the pre-processing breakdown and images, feel free to change the cards itself on LINE: 343 !!!!
- Note Middle Boxes, is just the bounding box closest to the middle!
-SSDtraining.py is the same code just without visuals so I can use training and test data on our cards.
-There is likely no need to run training.py but testing.py should work if you’d like to see the: Accuracy on test data: 31.8202, however around ⅓ each time

testing_for_visuals.py:

This script is intended for visualizing the pre-processing steps and understanding how images are processed before being fed into the model.
It will display how the card images are cropped, the bounding boxes for value and suit are extracted, and the final cropped images before classification.

SSDtraining.py:

This script is functionally identical to the code in testing_for_visuals.py, but without any visualizations.
It allows you to use the training and test data to train and evaluate the SSD model on your dataset of cards.

training.py:

You may not need to run training.py immediately, as it is primarily designed to train the model.
The model is already trained in SSDtraining.py, so running training.py is not necessary unless you're planning to retrain the model with different parameters or further tuning.

testing.py is sufficient to evaluate the model's performance on test data and check its prediction accuracy.
Accuracy on Test Data:

After running testing.py, you will see the output, which represents the model's accuracy on the test dataset.
The accuracy fluctuates around ⅓ each time because the model might have some variability in predictions, especially if the data isn't fully optimized for the model.
This result indicates that while the model is making some correct predictions, it still needs further refinement to improve accuracy (such as better value and suit extraction and fine-tuning the model).